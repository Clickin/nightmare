#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:7.0-bookworm-slim AS base

#RUN sed -i 's@archive.ubuntu.com@mirror.kakao.com@g' /etc/apt/sources.list
RUN echo "Types: deb" >> /etc/apt/sources.list.d/microsoft.sources
RUN echo "URIs: https://packages.microsoft.com/ubuntu/22.10/prod/" >> /etc/apt/sources.list.d/microsoft.sources
RUN echo "Suites: kinetic" >> /etc/apt/sources.list.d/microsoft.sources
RUN echo "Components: main" >> /etc/apt/sources.list.d/microsoft.sources
RUN echo "trusted: yes" >> /etc/apt/sources.list.d/microsoft.sources

COPY resolv.conf /etc/resolv.conf
RUN apt clean && apt update
RUN apt remove -y openssl
RUN apt install -y libxml2 libpq5 libsqlite3-0 libonig5 libargon2-1
RUN apt install -y libmsquic
RUN apt install -y supervisor mariadb-server mariadb-client

RUN echo "vm.swappiness=100" >> /etc/sysctl.conf
#RUN sysctl -p

ENV EXTSHM ON
ENV LD_PRELOAD "${LD_PRELOAD}:/usr/local/lib/libphp.so"
ENV LD_LIBRARY_PATH "${LD_LIBRARY_PATH}:/app/lib:/usr/local/lib:/usr/local/lib64/"
ENV XPHP_CWD=/app/
ENV XPHP_INI=/app/config/php.ini
COPY *.deb/ /
RUN apt install -y --allow-downgrades /openssl.deb /nghttp2.deb /ngtcp2.deb /nghttp3.deb /curl.deb /php.deb
RUN rm *.deb
RUN mkdir /run/mysqld/
WORKDIR /app
EXPOSE 80 443
EXPOSE 443/udp
EXPOSE 3306

FROM mcr.microsoft.com/dotnet/sdk:latest AS build
WORKDIR /src
COPY ["Nightmare/Nightmare.csproj", "Nightmare/"]
RUN dotnet restore "Nightmare/Nightmare.csproj"
COPY . .
WORKDIR "/src/Nightmare"
RUN dotnet build "Nightmare.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "Nightmare.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
CMD ["supervisord", "-c", "/app/config/supervisord.conf"]